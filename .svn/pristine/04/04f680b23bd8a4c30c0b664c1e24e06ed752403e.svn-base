using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using CamDoAnhTu.Models;

namespace CamDoAnhTu.Controllers
{
    public class HomeController : Controller
    {
        // GET: Home
        public ActionResult Index()
        {
            return View();
        }

        public ActionResult Management()
        {
            using (CamdoAnhTuEntities1 ctx = new CamdoAnhTuEntities1())
            {
                List<Customer> list = ctx.Customers.ToList();

                return PartialView(list);
            }
        }

        public ActionResult LoadCustomer()
        {
            using (CamdoAnhTuEntities1 ctx = new CamdoAnhTuEntities1())
            {
                List<Customer> lst = ctx.Customers.ToList();

                return View(lst);
            }
        }

        public ActionResult AddCustomer()
        {
            return View();
        }

        [HttpPost]
        public ActionResult AddCustomer(Customer model)
        {
            using (CamdoAnhTuEntities1 ctx = new CamdoAnhTuEntities1())
            {
                model.DayPaids = 0;
                model.AmountPaid = 0;
                model.RemainingAmount = 0;
                ctx.Customers.Add(model);
                ctx.SaveChanges();


                for (int i = 1; i <= 59; i++)
                {
                    Loan temp = new Loan();
                    temp.Date = model.StartDate.Value.AddDays(i);
                    temp.IDCus = model.Code;
                    temp.Status = 0;
                    ctx.Loans.Add(temp);
                    ctx.SaveChanges();
                }
            }
            return RedirectToAction("LoadCustomer", "Home");
        }

        public ActionResult Update(int? id)
        {
            if (id.HasValue == false)
            {
                return RedirectToAction("LoadCustomer", "Home");
            }
            using (CamdoAnhTuEntities1 ctx = new CamdoAnhTuEntities1())
            {

                Customer pro = ctx.Customers.Where(p => p.Code == id).FirstOrDefault();

                if (pro == null)
                {
                    return RedirectToAction("LoadCustomer", "Home");
                }

                return View(pro);
            }

        }

        [HttpPost]
        [ValidateInput(false)]
        public ActionResult Update(Customer model)
        {
            using (CamdoAnhTuEntities1 ctx = new CamdoAnhTuEntities1())
            {
                Customer pro = ctx.Customers.Where(p => p.Code == model.Code).FirstOrDefault();
                pro.Name = model.Name;
                pro.Phone = model.Phone;
                pro.Address = model.Address;
                pro.Loan = model.Loan;
                pro.Price = model.Price;
                pro.DayPaids = model.DayPaids;
                pro.AmountPaid = model.AmountPaid;
                pro.RemainingAmount = model.RemainingAmount;

                ctx.SaveChanges();

                ViewBag.Added = true;
                return RedirectToAction("LoadCustomer", "Home");
            }
        }

        [HttpPost]
        public ActionResult RemoveItem(int proId)
        {
            using (CamdoAnhTuEntities1 ctx = new CamdoAnhTuEntities1())
            {
                Customer ep = ctx.Customers.Where(p => p.Code == proId).FirstOrDefault();
                List<Loan> lstLoans = ctx.Loans.Where(p => p.IDCus == proId).ToList();

                ctx.Customers.Remove(ep);

                foreach (var item in lstLoans)
                {
                    ctx.Loans.Remove(item);
                }
                ctx.SaveChanges();
            }
            ViewBag.Delete = true;
            return RedirectToAction("LoadCustomer", "Home");
        }

        public ActionResult Detail(int? id)
        {
            if (id.HasValue == false)
            {
                return RedirectToAction("Index", "Home");
            }

            using (CamdoAnhTuEntities1 ctx = new CamdoAnhTuEntities1())
            {
                Customer model = ctx.Customers.FirstOrDefault(p => p.Code == id);
                List<Loan> list = ctx.Loans.Where(p => p.IDCus == id).ToList();
                ViewData["Loan"] = list;

                return View(model);
            }
        }

        public ActionResult Addday(Loan model)
        {
            using (CamdoAnhTuEntities1 ctx = new CamdoAnhTuEntities1())
            {
                ctx.Loans.Add(model);
                ctx.SaveChanges();
            }

            return RedirectToAction("LoadCustomer", "Home");
        }

        public ActionResult UpdateLoan(int loanid)
        {
            Loan item = new Loan();
            using (CamdoAnhTuEntities1 ctx = new CamdoAnhTuEntities1())
            {
                item = ctx.Loans.Where(p => p.ID == loanid).FirstOrDefault();
                item.Status = 1;

                Customer csCustomer = ctx.Customers.Where(p => p.Code == item.IDCus).FirstOrDefault();
                csCustomer.DayPaids++;
                csCustomer.AmountPaid = csCustomer.DayPaids * csCustomer.Price;
                csCustomer.RemainingAmount = csCustomer.Loan - csCustomer.AmountPaid;

                ctx.SaveChanges();
            }

            return RedirectToAction("Detail", "Home", new { id = item.IDCus });
        }

    }
}